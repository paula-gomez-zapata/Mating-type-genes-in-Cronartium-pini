################################################################################
# 1. Sort a FASTA file by the size of the scaffolds:
#
# Extract scaffold sizes from the FASTA file.
# Sort scaffolds based on size.
# Reorder the FASTA file based on the sorted scaffold sizes.
################################################################################
#
# Request 2 hours, 0 minutes, 0 seconds run time
#$ -l h_rt=12:0:0
#
# Request 4GB memory (check the need for your specific program!)
#$ -l h_vmem=16G
#
# Request mails to be sent when the job finishes (e) or if it fails (a)
#$ -m ae 
#
# Run in the current directory (otherwise it will run from your home directory)
#$ -cwd 
#
# Keep all output in a single file
#$ -j y 
#
# Temporary files created during the job should be placed in $TMPDIR
# This directory is local to the server where the job is executed and
# file access here is MUCH faster than the project folder. 
#
# Place your commands below this line
#
# If you need to run your job with multiple threads you can do so by using the following commands:
# SMP (symmetric multiprocessing) is the processing of programs by multiple processors that share a common operating system and memory.
# -pe smp (# of cores you want - not in brackets) 
#$ -pe smp 20
#
#################################################################################################################

genome_file="/nfs4/my-mgrid-s8/mykopat-proj1/mykopat-c-flacc/raw-data/assembly/pt_128_002_nuclear_20220614.fasta.gz"
output="/nfs4/my-mgrid-s8/mykopat-proj1/mykopat-c-flacc/sort_nuc_genome"

#Extract Scaffold Information to a Text File:
zcat $genome_file | awk '/^>/{if (seqlen) print name, seqlen; name=$0; seqlen=0; next; } { seqlen += length($0) } END { print name, seqlen; }' > $output/scaffold_info.txt

#Sort Scaffold Information by Length:
sort -k2,2nr -o $output/scaffold_info_sorted.txt $output/scaffold_info.txt

#Reorder the FASTA file based on the sorted scaffold sizes.
zcat $genome_file | \
awk '/^>/ {printf("%s%s\t",(N>0?"\n":""),$0);N++;next;} {printf("%s",$0);} END {printf("\n");}' |\
awk -F '\t' '{printf("%d\t%s\n",length($2),$0);}' |\
sort -k1,1nr | cut -f 2- | tr "\t" "\n" > $output/sorted_nuclear.fasta

#rename the scaffolds for "scf" followed by the number of each scaffold
awk '/^>/{print ">scf" sprintf("%03d", ++count); next} {print}' $output/sort_nuclear.fasta > $output/renamed_sort_nucleargenome.fasta


